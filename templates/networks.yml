Parameters:
# whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
  VpcCidr:
    Description: 'CIDR VPC (10.0.0.0/16)'
    Type: String
    AllowedValues:
      - '10.0.0.0/16'
    Default: 10.0.0.0/16
  PublicSubnetCidr1:
    Description: 'CIDR SUBNET (10.0.0.0/24)'
    Type: String
    AllowedValues:
      - '10.0.0.0/24'
    Default: 10.0.0.0/24
  PublicSubnetCidr2:
    Description: 'CIDR SUBNET (10.0.2.0/24)'
    Type: String
    AllowedValues:
      - '10.0.2.0/24'
    Default: 10.0.2.0/24
  PrivateSubnetCidr1:
    Description: 'CIDR SUBNET (10.0.1.0/24)'
    Type: String
    AllowedValues:
      - '10.0.1.0/24'
    Default: 10.0.1.0/24
  PrivateSubnetCidr2:
    Description: 'CIDR SUBNET (10.0.3.0/24)'
    Type: String
    AllowedValues:
      - '10.0.3.0/24'
    Default: 10.0.3.0/24
  EnvironmentName:
    Description: 'EnvironmentName for the project'
    Type: String
    AllowedValues:
      - 'Udagram'
    Default: 'Udagram'
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub "${EnvironmentName}-VPC"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: Udagram Internet gateway
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    DependsOn: AttachInternetGateway
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetCidr1
      AvailabilityZone:
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value: !Sub "${EnvironmentName}-PublicSubnet1"
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    DependsOn: AttachInternetGateway
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PublicSubnetCidr2
      AvailabilityZone:
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value: !Sub "${EnvironmentName}-PublicSubnet2"
  PublicSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: PublicSubnet1RouteTable
  PublicSubnet1RouteIGW:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId:
        Ref: PublicSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: PublicSubnet2RouteTable
  PublicSubnet2RouteIGW:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId:
        Ref: PublicSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnet1RouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnet2RouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetCidr1
      AvailabilityZone:
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value: !Sub "${EnvironmentName}-PrivateSubnet1"

  PrivateSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: PrivateSubnet1RouteTable
        
  # PrivateSubnet1Route:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     DestinationCidrBlock: !Ref PublicSubnetCidr1
  #     RouteTableId:
  #       Ref: PrivateSubnet1RouteTable

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref PrivateSubnetCidr2
      AvailabilityZone:
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${EnvironmentName}-PrivateSubnet2"

  PrivateSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: PrivateSubnet2RouteTable

  # PrivateSubnet2Route:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId:
  #       Ref: PrivateSubnet2RouteTable
  #     DestinationCidrBlock: !Ref PublicSubnetCidr2

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnet2RouteTable
      SubnetId: !Ref PrivateSubnet2

  NatGateway1EIP:
      Type: AWS::EC2::EIP
      DependsOn: AttachInternetGateway
      Properties: 
          Domain: vpc

  NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: AttachInternetGateway
      Properties:
          Domain: vpc

  NatGateway1: 
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt NatGateway1EIP.AllocationId
          SubnetId: !Ref PublicSubnet1

  NatGateway2: 
      Type: AWS::EC2::NatGateway
      Properties:
        AllocationId: !GetAtt NatGateway2EIP.AllocationId
        SubnetId: !Ref PublicSubnet2

  DefaultPrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateSubnet1RouteTable
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway1

  DefaultPrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateSubnet2RouteTable
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway2

Outputs: 
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: !Sub ${EnvironmentName}-VPC

    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref PrivateSubnet1RouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2:
        Description: Private Routing AZ2
        Value: !Ref PrivateSubnet2RouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN

    PublicSubnet2: 
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PUB2-SN

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-SN

    PrivateSubnet2: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref PrivateSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-SN   
